{"name":"PyLOH","tagline":"1.0","body":"README for PyLOH\r\n================\r\n\r\n\r\nINTRODUCTION\r\n============\r\n\r\nNext-generation sequencing has revolutionized the study of\r\ncancer genomes. However, the reads obtained from next-\r\ngeneration sequencing of tumor samples often consist of a\r\nmixture of normal and tumor cells, which themselves can\r\nbe of multiple clonal types. A prominent problem in the\r\nanalysis of cancer genome sequencing data is deconvolving\r\nthe mixture to identify the reads associated with tumor\r\ncells or a particular subclone of tumor cells. Solving the\r\nproblem is, however, challenging due to the so-called\r\n“identifiability problem”, where different combinations of\r\ntumor purity and ploidy often explain the sequencing data\r\nequally well. Here, we propose a new model to resolve the\r\nidentifiability problem by integrating two types of sequencing\r\ninformation - somatic copy number alterations and loss of\r\nheterozygosity - within an unified probabilistic framework.\r\nWe derive algorithms to solve our model, and implement\r\nthem in a software package called PyLOH. We also introduce a \r\nnovel visualization method \"BAF heat map\" to to characterize \r\nthe cluster pattern of LOH.\r\n\r\n\r\nINSTALL\r\n=======\r\n\r\nPrerequisites\r\n-------------\r\n* Although not mandatory, Linux system is recommended.\r\n\r\n* Python (2.7). [Python 2.7.3](http://www.python.org/download/releases/2.7.3/) is recommended.\r\n\r\n* [Numpy](http://www.numpy.org/)(>=1.6.1). You can download the source of Numpy from [here](http://sourceforge.net/projects/numpy/files/).\r\n\r\n* [Scipy](http://www.scipy.org/)(>=0.10). You can download the source of Scipy from [here](http://sourceforge.net/projects/scipy/files/).\r\n\r\n* [Pysam](https://code.google.com/p/pysam/)(>=0.7). To install Pysam, you also need to install [Cython](http://cython.org/) first. \r\n\r\n* [matplotlib](http://matplotlib.org/)(>=1.2.0) is required to plot BAF heat map.\r\n\r\n\r\nAltough not required by PyLOH, [samtools](http://samtools.sourceforge.net/) can be useful for creating bam, bam index and fasta index \r\nfiles which are required by the pysam module of PyLOH. \r\n\r\nInstall from source\r\n-------------------\r\nDownload the compressed source file PyLOH-*.tar.gz and do as follows:\r\n\r\n```\r\n$ tar -xzvf PyLOH-*.tar.gz\r\n$ cd PyLOH-*\r\n$ python setup.py install\r\n```\r\n\r\nIf you prefer to install PyLOH other than the default directory, you can also use this command:\r\n```\r\n$ python setup.py install --prefix /home/yili/\r\n```\r\n\r\nThere are also `config/` and `bin/` folders under PyLOH-*. The `config/` folder contains example priors and the `bin/` folder contains \r\nuseful utilities, such as the R code to run [BICseq](http://compbio.med.harvard.edu/Supplements/PNAS11.html) and the python script to \r\nconvert BICseq results to BED file. You can copy these two folders somewhere easily accessible.\r\n\r\n\r\n\r\nUSAGE\r\n=====\r\n\r\n\r\nOverview\r\n--------\r\nPyLOH is composed of three modules: \r\n* `preprocess`. Preprocess the reads aliments of paired normal-tumor samples in BAM format and produce the paired counts file, \r\npreprocessed segments file and preprocessed BAF heat map file as output.\r\n \r\n* `run_model`. Take the paired counts file and preprocessed segments file as input, estimate tumor purity, the copy number and the\r\nallele type of each segment.\r\n\r\n* `postprocess`. Take the preprocessed BAF heat map file as input and plot the BAF heat map for each segment as output.\r\n\r\nThe general workflow of PyLOH is this\r\n![alt tag](https://github.com/uci-cbcl/PyLOH/blob/gh-pages/images/workflow.png?raw=true)\r\n\r\n\r\nPreprocess\r\n----------\r\nThis part of README is based on [JoinSNVMix](https://code.google.com/p/joint-snv-mix/wiki/runningOld). To preprocess the paired \r\ncancer sequencing data, execute:\r\n```\r\n$ PyLOH.py preprocess REFERENCE_GENOME.fasta NORMAL.bam TUMOUR.bam BASENAME --segments_bed SEGMENTS.bed --min_depth 20 --min_base_qual 10 --min_map_qual 10 --process_num 10\r\n```\r\n\r\n**REFERENCE_GENOME.fasta** The path to the fasta file that the paired BAM files aligned to. Note that the index file should be generated \r\nfor the reference genome. This can be done by running samtools as follows:\r\n\r\n`$ samtools faidx REFERENCE_GENOME.fasta`\r\n\r\n**NORMAL.bam** The BAM file for the normal sample. The BAM index file should be generated for this file and named NORMAL.bam.bai. This can\r\nbe done by running\r\n\r\n`$ samtools index NORMAL.bam`\r\n\r\n**TUMOUR.bam** The bam file for the tumour sample. As for the normal this file needs to be indexed.\r\n\r\n**BASENAME** The base name of preprocessed files to be created.\r\n\r\n**--segments_bed** Use the genome segmentation stored in SEGMENTS.bed. If not provided, use 22 autosomes as the segmentaion. \r\nBut using automatic segmentation algorithm to generate SEGMENTS.bed is highly recommended, such as [BICseq](http://compbio.med.harvard.edu/Supplements/PNAS11.html).\r\n\r\n**--min_depth** Minimum depth in both normal and tumor sample required to use a site in the analysis.\r\n\r\n**--min_base_qual** Minimum base quality required for each base.\r\n\r\n**--min_map_qual** Minimum mapping quality required for each base.\r\n\r\n**--process_num** Number of processes to launch for preprocessing.\r\n\r\n\r\nRun model\r\n---------\r\nAfter the paired cancer sequencing data is preprocessed, we can run the probabilistic model of PyLOH by execute:\r\n```\r\n$ PyLOH.py run_model BASENAME --allele_number_max 2 --max_iters 100 --stop_value 1e-7\r\n```\r\n**BASENAME** The base name of preprocessed files created in the preprocess step.\r\n\r\n**--allelenumber_max** The maximum copy number of each allele allows to take.\r\n\r\n**--priors** Path to the file of the prior distribution. The prior file must be consistent with the --allele_number_max. If not provided,\r\nuse uniform prior, which is recommended.\r\n\r\n**--max_iters** Maximum number of iterations for training.\r\n\r\n**--stop_value** Stop value of the EM algorithm for training. If the change of log-likelihood is lower than this value, stop training.\r\n\r\n\r\nPostprocess\r\n-----------\r\nCurrently, the postprocess module is only for plotting the BAF heat map of each segment:\r\n```\r\n$ PyLOH.py BAF_heatmap BASENAME\r\n```\r\n\r\n**BASENAME** The base name of preprocessed files created in the preprocess step.\r\n\r\n\r\nOutput files\r\n------------\r\n**\\*.PyLOH.counts** The preprocessed paired counts file. It contains the allelic counts information of sites, which are heterozygous \r\nloci in the normal genome. The definition of each column in a *.PyLOH.counts file is listed here:\r\n\r\n| Column    | Definition                                         | \r\n| :-------- | :------------------------------------------------- | \r\n| seg_index | Index of each segment                              |      \r\n| normal_A  | Count of bases match A allele in the normal sample |\r\n| normal_B  | Count of bases match B allele in the normal sample |\r\n| tumor_A   | Count of bases match A allele in the tumor sample  |\r\n| tumor_B   | Count of bases match B allele in the tumor sample  |\r\n\r\n**\\*.PyLOH.segments** The preprocessed segments file. It contains the genomic information of each segment. The definition of each\r\ncolumn in a *.PyLOH.segments file is listed here:\r\n\r\n| Column           | Definition                                                              | \r\n| :--------------- | :---------------------------------------------------------------------- | \r\n| seg_name         | Name of the segment                                                     |      \r\n| chrom            | Chromosome of the segment                                               |  \r\n| start            | Start position of the segment                                           |\r\n| end              | End position of the segment                                             |\r\n| normal_reads_num | Count of reads mapped to the segment in the normal sample               |\r\n| tumor_reads_num  | Count of reads mapped to the segment in the normal sample               |\r\n| LOH_frec         | Fraction of LOH sites in the segment                                    |\r\n| LOH_status       | FALSE -> no LOH; TRUE -> significant LOH; UNCERTAIN -> medium level LOH |\r\n| log2_ratio       | Log2 ratio between tumor_reads_num and normal_reads_num                 |\r\n\r\n**\\*.PyLOH.segments.extended** The extended segments file after run_model. There are two additional columns:\r\n\r\n| Column           | Definition                            | \r\n| :--------------- | :-------------------------------------| \r\n| allele_type      | Estimated allele type of the segment  |      \r\n| copy_number      | Estimated copy number of the segment  |  \r\n\r\n**\\*.PyLOH.purity** Estimated tumor purity.\r\n\r\n**\\*.PyLOH.heatmap.pkl** The preprocessed BAF heat map file in Python pickle format.\r\n\r\n**\\*.PyLOH.heatmap.plot** The folder of BAF heat maps plotted for each segment. A typical BAF heat map looks like this\r\n![alt tag](https://github.com/uci-cbcl/PyLOH/blob/gh-pages/images/BAF_heamap_sample.png?raw=true)\r\n\r\n\r\n\r\nOTHER\r\n=====\r\n\r\nBIC-seq related utilities\r\n-------------------------\r\nWe highly recommend using automatic segmentation algorithm to partition the tumor genome, and thus prepare the segments file in BED format.\r\nFor exmaple, we used [BICseq](http://compbio.med.harvard.edu/Supplements/PNAS11.html) in the original paper. To run a BICseq analysis, you\r\ncan copy the commands in `bin/BICseq.R` and paste them in a R interative shell. Or you can also run the R script from the command line:\r\n```\r\n$ R CMD BATCH bin/BICseq.R\r\n```\r\nNote that,`normal.bam` and `tumor.bam` must be in the same directory where you run the command. The R script will output a segments file\r\n`segments.BICseq`. Then you can use the other script `bin/BICseq2bed.py` to convert the segments file into BED format:\r\n```\r\n$ BICseq2bed.py segments.BICseq segments.bed --seg_length 1000000\r\n```\r\n\r\n**--seg_length** Only convert segments with length longer than the threshold.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}